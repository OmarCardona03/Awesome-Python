void twoWaySort(int arr[], int n) 
{ 
    // Current indexes from left and right 
    int l = 0, r = n - 1; 
  
    // Count of odd numbers 
    int k = 0; 
  
    while (l < r) { 
        // Find first odd number from left side. 
        while (arr[l] % 2 != 0) { 
            l++; 
            k++; 
        } 
  
        // Find first even number from right side. 
        while (arr[r] % 2 == 0 && l < r) 
            r--; 
  
        // Swap odd number present on left and even 
        // number right. 
        if (l < r) 
            swap(arr[l], arr[r]); 
    } 
  
    // Sort odd number in descending order 
    sort(arr, arr + k, greater<int>()); 
  
    // Sort even number in ascending order 
    sort(arr + k, arr + n); 
} 
